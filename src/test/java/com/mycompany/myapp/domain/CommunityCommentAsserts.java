package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CommunityCommentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityCommentAllPropertiesEquals(CommunityComment expected, CommunityComment actual) {
        assertCommunityCommentAutoGeneratedPropertiesEquals(expected, actual);
        assertCommunityCommentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityCommentAllUpdatablePropertiesEquals(CommunityComment expected, CommunityComment actual) {
        assertCommunityCommentUpdatableFieldsEquals(expected, actual);
        assertCommunityCommentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityCommentAutoGeneratedPropertiesEquals(CommunityComment expected, CommunityComment actual) {
        assertThat(expected)
            .as("Verify CommunityComment auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityCommentUpdatableFieldsEquals(CommunityComment expected, CommunityComment actual) {
        assertThat(expected)
            .as("Verify CommunityComment relevant properties")
            .satisfies(e -> assertThat(e.getComment()).as("check comment").isEqualTo(actual.getComment()))
            .satisfies(e -> assertThat(e.getCommentByUserId()).as("check commentByUserId").isEqualTo(actual.getCommentByUserId()))
            .satisfies(e -> assertThat(e.getCommunityCommentId()).as("check communityCommentId").isEqualTo(actual.getCommunityCommentId()))
            .satisfies(e -> assertThat(e.getCommunityPostId()).as("check communityPostId").isEqualTo(actual.getCommunityPostId()))
            .satisfies(e -> assertThat(e.getCreatedOn()).as("check createdOn").isEqualTo(actual.getCreatedOn()))
            .satisfies(e -> assertThat(e.getIsActive()).as("check isActive").isEqualTo(actual.getIsActive()))
            .satisfies(e -> assertThat(e.getLastUpdatedOn()).as("check lastUpdatedOn").isEqualTo(actual.getLastUpdatedOn()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityCommentUpdatableRelationshipsEquals(CommunityComment expected, CommunityComment actual) {
        // empty method
    }
}
