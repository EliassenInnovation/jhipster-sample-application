package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CommunityLikeMstAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityLikeMstAllPropertiesEquals(CommunityLikeMst expected, CommunityLikeMst actual) {
        assertCommunityLikeMstAutoGeneratedPropertiesEquals(expected, actual);
        assertCommunityLikeMstAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityLikeMstAllUpdatablePropertiesEquals(CommunityLikeMst expected, CommunityLikeMst actual) {
        assertCommunityLikeMstUpdatableFieldsEquals(expected, actual);
        assertCommunityLikeMstUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityLikeMstAutoGeneratedPropertiesEquals(CommunityLikeMst expected, CommunityLikeMst actual) {
        assertThat(expected)
            .as("Verify CommunityLikeMst auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityLikeMstUpdatableFieldsEquals(CommunityLikeMst expected, CommunityLikeMst actual) {
        assertThat(expected)
            .as("Verify CommunityLikeMst relevant properties")
            .satisfies(e -> assertThat(e.getCommunityLikeId()).as("check communityLikeId").isEqualTo(actual.getCommunityLikeId()))
            .satisfies(e -> assertThat(e.getCommunityPostId()).as("check communityPostId").isEqualTo(actual.getCommunityPostId()))
            .satisfies(e -> assertThat(e.getCreatedOn()).as("check createdOn").isEqualTo(actual.getCreatedOn()))
            .satisfies(e -> assertThat(e.getIsActive()).as("check isActive").isEqualTo(actual.getIsActive()))
            .satisfies(e -> assertThat(e.getIsLiked()).as("check isLiked").isEqualTo(actual.getIsLiked()))
            .satisfies(e -> assertThat(e.getLikedByUserId()).as("check likedByUserId").isEqualTo(actual.getLikedByUserId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityLikeMstUpdatableRelationshipsEquals(CommunityLikeMst expected, CommunityLikeMst actual) {
        // empty method
    }
}
