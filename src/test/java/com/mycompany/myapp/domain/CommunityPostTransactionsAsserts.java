package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CommunityPostTransactionsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityPostTransactionsAllPropertiesEquals(
        CommunityPostTransactions expected,
        CommunityPostTransactions actual
    ) {
        assertCommunityPostTransactionsAutoGeneratedPropertiesEquals(expected, actual);
        assertCommunityPostTransactionsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityPostTransactionsAllUpdatablePropertiesEquals(
        CommunityPostTransactions expected,
        CommunityPostTransactions actual
    ) {
        assertCommunityPostTransactionsUpdatableFieldsEquals(expected, actual);
        assertCommunityPostTransactionsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityPostTransactionsAutoGeneratedPropertiesEquals(
        CommunityPostTransactions expected,
        CommunityPostTransactions actual
    ) {
        assertThat(expected)
            .as("Verify CommunityPostTransactions auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityPostTransactionsUpdatableFieldsEquals(
        CommunityPostTransactions expected,
        CommunityPostTransactions actual
    ) {
        assertThat(expected)
            .as("Verify CommunityPostTransactions relevant properties")
            .satisfies(e -> assertThat(e.getAttachmentUrl()).as("check attachmentUrl").isEqualTo(actual.getAttachmentUrl()))
            .satisfies(e -> assertThat(e.getCommunityPostId()).as("check communityPostId").isEqualTo(actual.getCommunityPostId()))
            .satisfies(e ->
                assertThat(e.getCommunityPostTransactionId())
                    .as("check communityPostTransactionId")
                    .isEqualTo(actual.getCommunityPostTransactionId())
            )
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedOn()).as("check createdOn").isEqualTo(actual.getCreatedOn()))
            .satisfies(e -> assertThat(e.getIsActive()).as("check isActive").isEqualTo(actual.getIsActive()))
            .satisfies(e -> assertThat(e.getLastUpdatedBy()).as("check lastUpdatedBy").isEqualTo(actual.getLastUpdatedBy()))
            .satisfies(e -> assertThat(e.getLastUpdatedOn()).as("check lastUpdatedOn").isEqualTo(actual.getLastUpdatedOn()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommunityPostTransactionsUpdatableRelationshipsEquals(
        CommunityPostTransactions expected,
        CommunityPostTransactions actual
    ) {
        // empty method
    }
}
