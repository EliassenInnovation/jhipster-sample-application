package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ErrorLogAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertErrorLogAllPropertiesEquals(ErrorLog expected, ErrorLog actual) {
        assertErrorLogAutoGeneratedPropertiesEquals(expected, actual);
        assertErrorLogAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertErrorLogAllUpdatablePropertiesEquals(ErrorLog expected, ErrorLog actual) {
        assertErrorLogUpdatableFieldsEquals(expected, actual);
        assertErrorLogUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertErrorLogAutoGeneratedPropertiesEquals(ErrorLog expected, ErrorLog actual) {
        assertThat(expected)
            .as("Verify ErrorLog auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertErrorLogUpdatableFieldsEquals(ErrorLog expected, ErrorLog actual) {
        assertThat(expected)
            .as("Verify ErrorLog relevant properties")
            .satisfies(e -> assertThat(e.getCreatedOn()).as("check createdOn").isEqualTo(actual.getCreatedOn()))
            .satisfies(e -> assertThat(e.getErrorId()).as("check errorId").isEqualTo(actual.getErrorId()))
            .satisfies(e -> assertThat(e.getErrorMessage()).as("check errorMessage").isEqualTo(actual.getErrorMessage()))
            .satisfies(e -> assertThat(e.getErrorPath()).as("check errorPath").isEqualTo(actual.getErrorPath()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertErrorLogUpdatableRelationshipsEquals(ErrorLog expected, ErrorLog actual) {
        // empty method
    }
}
