package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MonthMstAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMonthMstAllPropertiesEquals(MonthMst expected, MonthMst actual) {
        assertMonthMstAutoGeneratedPropertiesEquals(expected, actual);
        assertMonthMstAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMonthMstAllUpdatablePropertiesEquals(MonthMst expected, MonthMst actual) {
        assertMonthMstUpdatableFieldsEquals(expected, actual);
        assertMonthMstUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMonthMstAutoGeneratedPropertiesEquals(MonthMst expected, MonthMst actual) {
        assertThat(expected)
            .as("Verify MonthMst auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMonthMstUpdatableFieldsEquals(MonthMst expected, MonthMst actual) {
        assertThat(expected)
            .as("Verify MonthMst relevant properties")
            .satisfies(e -> assertThat(e.getIsActive()).as("check isActive").isEqualTo(actual.getIsActive()))
            .satisfies(e -> assertThat(e.getMonthID()).as("check monthID").isEqualTo(actual.getMonthID()))
            .satisfies(e -> assertThat(e.getMonthName()).as("check monthName").isEqualTo(actual.getMonthName()))
            .satisfies(e -> assertThat(e.getYear()).as("check year").isEqualTo(actual.getYear()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMonthMstUpdatableRelationshipsEquals(MonthMst expected, MonthMst actual) {
        // empty method
    }
}
