package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OneWorldSyncProductAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOneWorldSyncProductAllPropertiesEquals(OneWorldSyncProduct expected, OneWorldSyncProduct actual) {
        assertOneWorldSyncProductAutoGeneratedPropertiesEquals(expected, actual);
        assertOneWorldSyncProductAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOneWorldSyncProductAllUpdatablePropertiesEquals(OneWorldSyncProduct expected, OneWorldSyncProduct actual) {
        assertOneWorldSyncProductUpdatableFieldsEquals(expected, actual);
        assertOneWorldSyncProductUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOneWorldSyncProductAutoGeneratedPropertiesEquals(OneWorldSyncProduct expected, OneWorldSyncProduct actual) {
        assertThat(expected)
            .as("Verify OneWorldSyncProduct auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOneWorldSyncProductUpdatableFieldsEquals(OneWorldSyncProduct expected, OneWorldSyncProduct actual) {
        assertThat(expected)
            .as("Verify OneWorldSyncProduct relevant properties")
            .satisfies(e -> assertThat(e.getAddedSugars()).as("check addedSugars").isEqualTo(actual.getAddedSugars()))
            .satisfies(e -> assertThat(e.getAddedSugarUom()).as("check addedSugarUom").isEqualTo(actual.getAddedSugarUom()))
            .satisfies(e -> assertThat(e.getAllergenKeyword()).as("check allergenKeyword").isEqualTo(actual.getAllergenKeyword()))
            .satisfies(e -> assertThat(e.getAllergens()).as("check allergens").isEqualTo(actual.getAllergens()))
            .satisfies(e -> assertThat(e.getBrandName()).as("check brandName").isEqualTo(actual.getBrandName()))
            .satisfies(e -> assertThat(e.getCalories()).as("check calories").isEqualTo(actual.getCalories()))
            .satisfies(e -> assertThat(e.getCaloriesUom()).as("check caloriesUom").isEqualTo(actual.getCaloriesUom()))
            .satisfies(e -> assertThat(e.getCarbohydrates()).as("check carbohydrates").isEqualTo(actual.getCarbohydrates()))
            .satisfies(e -> assertThat(e.getCarbohydratesUom()).as("check carbohydratesUom").isEqualTo(actual.getCarbohydratesUom()))
            .satisfies(e -> assertThat(e.getCategoryName()).as("check categoryName").isEqualTo(actual.getCategoryName()))
            .satisfies(e -> assertThat(e.getCholesterol()).as("check cholesterol").isEqualTo(actual.getCholesterol()))
            .satisfies(e -> assertThat(e.getCholesterolUOM()).as("check cholesterolUOM").isEqualTo(actual.getCholesterolUOM()))
            .satisfies(e -> assertThat(e.getCreatedOn()).as("check createdOn").isEqualTo(actual.getCreatedOn()))
            .satisfies(e -> assertThat(e.getDataForm()).as("check dataForm").isEqualTo(actual.getDataForm()))
            .satisfies(e -> assertThat(e.getDietaryFiber()).as("check dietaryFiber").isEqualTo(actual.getDietaryFiber()))
            .satisfies(e -> assertThat(e.getDietaryFiberUom()).as("check dietaryFiberUom").isEqualTo(actual.getDietaryFiberUom()))
            .satisfies(e -> assertThat(e.getDistributor()).as("check distributor").isEqualTo(actual.getDistributor()))
            .satisfies(e ->
                assertThat(e.getDoNotConsiderProduct()).as("check doNotConsiderProduct").isEqualTo(actual.getDoNotConsiderProduct())
            )
            .satisfies(e -> assertThat(e.getExtendedModel()).as("check extendedModel").isEqualTo(actual.getExtendedModel()))
            .satisfies(e -> assertThat(e.getgLNNumber()).as("check gLNNumber").isEqualTo(actual.getgLNNumber()))
            .satisfies(e -> assertThat(e.getgTIN()).as("check gTIN").isEqualTo(actual.getgTIN()))
            .satisfies(e -> assertThat(e.geth7()).as("check h7").isEqualTo(actual.geth7()))
            .satisfies(e -> assertThat(e.getImage()).as("check image").isEqualTo(actual.getImage()))
            .satisfies(e -> assertThat(e.getIngredients()).as("check ingredients").isEqualTo(actual.getIngredients()))
            .satisfies(e -> assertThat(e.getIsActive()).as("check isActive").isEqualTo(actual.getIsActive()))
            .satisfies(e -> assertThat(e.getIsApprove()).as("check isApprove").isEqualTo(actual.getIsApprove()))
            .satisfies(e -> assertThat(e.getIsMerge()).as("check isMerge").isEqualTo(actual.getIsMerge()))
            .satisfies(e -> assertThat(e.getIsProductSync()).as("check isProductSync").isEqualTo(actual.getIsProductSync()))
            .satisfies(e -> assertThat(e.getManufacturer()).as("check manufacturer").isEqualTo(actual.getManufacturer()))
            .satisfies(e -> assertThat(e.getManufacturerId()).as("check manufacturerId").isEqualTo(actual.getManufacturerId()))
            .satisfies(e ->
                assertThat(e.getManufacturerText1Ws()).as("check manufacturerText1Ws").isEqualTo(actual.getManufacturerText1Ws())
            )
            .satisfies(e -> assertThat(e.getModifiedOn()).as("check modifiedOn").isEqualTo(actual.getModifiedOn()))
            .satisfies(e -> assertThat(e.getProductDescription()).as("check productDescription").isEqualTo(actual.getProductDescription()))
            .satisfies(e -> assertThat(e.getProductId()).as("check productId").isEqualTo(actual.getProductId()))
            .satisfies(e -> assertThat(e.getProductName()).as("check productName").isEqualTo(actual.getProductName()))
            .satisfies(e -> assertThat(e.getProtein()).as("check protein").isEqualTo(actual.getProtein()))
            .satisfies(e -> assertThat(e.getProteinUom()).as("check proteinUom").isEqualTo(actual.getProteinUom()))
            .satisfies(e -> assertThat(e.getSaturatedFat()).as("check saturatedFat").isEqualTo(actual.getSaturatedFat()))
            .satisfies(e -> assertThat(e.getServing()).as("check serving").isEqualTo(actual.getServing()))
            .satisfies(e -> assertThat(e.getServingUom()).as("check servingUom").isEqualTo(actual.getServingUom()))
            .satisfies(e -> assertThat(e.getSodium()).as("check sodium").isEqualTo(actual.getSodium()))
            .satisfies(e -> assertThat(e.getSodiumUom()).as("check sodiumUom").isEqualTo(actual.getSodiumUom()))
            .satisfies(e -> assertThat(e.getStorageTypeId()).as("check storageTypeId").isEqualTo(actual.getStorageTypeId()))
            .satisfies(e -> assertThat(e.getStorageTypeName()).as("check storageTypeName").isEqualTo(actual.getStorageTypeName()))
            .satisfies(e -> assertThat(e.getSubCategory1Name()).as("check subCategory1Name").isEqualTo(actual.getSubCategory1Name()))
            .satisfies(e -> assertThat(e.getSubCategory2Name()).as("check subCategory2Name").isEqualTo(actual.getSubCategory2Name()))
            .satisfies(e -> assertThat(e.getSugar()).as("check sugar").isEqualTo(actual.getSugar()))
            .satisfies(e -> assertThat(e.getSugarUom()).as("check sugarUom").isEqualTo(actual.getSugarUom()))
            .satisfies(e -> assertThat(e.getSyncEffective()).as("check syncEffective").isEqualTo(actual.getSyncEffective()))
            .satisfies(e ->
                assertThat(e.getSyncHeaderLastChange()).as("check syncHeaderLastChange").isEqualTo(actual.getSyncHeaderLastChange())
            )
            .satisfies(e ->
                assertThat(e.getSyncItemReferenceId()).as("check syncItemReferenceId").isEqualTo(actual.getSyncItemReferenceId())
            )
            .satisfies(e -> assertThat(e.getSyncLastChange()).as("check syncLastChange").isEqualTo(actual.getSyncLastChange()))
            .satisfies(e -> assertThat(e.getSyncPublication()).as("check syncPublication").isEqualTo(actual.getSyncPublication()))
            .satisfies(e -> assertThat(e.getTotalFat()).as("check totalFat").isEqualTo(actual.getTotalFat()))
            .satisfies(e -> assertThat(e.getTransFat()).as("check transFat").isEqualTo(actual.getTransFat()))
            .satisfies(e -> assertThat(e.getuPC()).as("check uPC").isEqualTo(actual.getuPC()))
            .satisfies(e -> assertThat(e.getVendor()).as("check vendor").isEqualTo(actual.getVendor()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOneWorldSyncProductUpdatableRelationshipsEquals(OneWorldSyncProduct expected, OneWorldSyncProduct actual) {
        // empty method
    }
}
