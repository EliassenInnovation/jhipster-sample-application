package com.mycompany.myapp.domain;

import java.util.Random;
import java.util.UUID;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;

public class OneWorldSyncProductTestSamples {

    private static final Random random = new Random();
    private static final AtomicLong longCount = new AtomicLong(random.nextInt() + (2 * Integer.MAX_VALUE));
    private static final AtomicInteger intCount = new AtomicInteger(random.nextInt() + (2 * Short.MAX_VALUE));

    public static OneWorldSyncProduct getOneWorldSyncProductSample1() {
        return new OneWorldSyncProduct()
            .id(1L)
            .addedSugars("addedSugars1")
            .addedSugarUom("addedSugarUom1")
            .allergens(1)
            .brandName("brandName1")
            .calories("calories1")
            .caloriesUom("caloriesUom1")
            .carbohydrates("carbohydrates1")
            .carbohydratesUom("carbohydratesUom1")
            .categoryName("categoryName1")
            .cholesterol("cholesterol1")
            .cholesterolUOM("cholesterolUOM1")
            .dataForm("dataForm1")
            .dietaryFiber("dietaryFiber1")
            .dietaryFiberUom("dietaryFiberUom1")
            .distributor("distributor1")
            .gLNNumber("gLNNumber1")
            .gTIN("gTIN1")
            .h7(1)
            .manufacturerId(1)
            .manufacturerText1Ws("manufacturerText1Ws1")
            .productId(1L)
            .protein("protein1")
            .proteinUom("proteinUom1")
            .saturatedFat("saturatedFat1")
            .serving("serving1")
            .servingUom("servingUom1")
            .sodium("sodium1")
            .sodiumUom("sodiumUom1")
            .storageTypeId(1)
            .subCategory1Name("subCategory1Name1")
            .subCategory2Name("subCategory2Name1")
            .sugar("sugar1")
            .sugarUom("sugarUom1")
            .syncItemReferenceId("syncItemReferenceId1")
            .totalFat("totalFat1")
            .transFat("transFat1")
            .uPC("uPC1")
            .vendor("vendor1");
    }

    public static OneWorldSyncProduct getOneWorldSyncProductSample2() {
        return new OneWorldSyncProduct()
            .id(2L)
            .addedSugars("addedSugars2")
            .addedSugarUom("addedSugarUom2")
            .allergens(2)
            .brandName("brandName2")
            .calories("calories2")
            .caloriesUom("caloriesUom2")
            .carbohydrates("carbohydrates2")
            .carbohydratesUom("carbohydratesUom2")
            .categoryName("categoryName2")
            .cholesterol("cholesterol2")
            .cholesterolUOM("cholesterolUOM2")
            .dataForm("dataForm2")
            .dietaryFiber("dietaryFiber2")
            .dietaryFiberUom("dietaryFiberUom2")
            .distributor("distributor2")
            .gLNNumber("gLNNumber2")
            .gTIN("gTIN2")
            .h7(2)
            .manufacturerId(2)
            .manufacturerText1Ws("manufacturerText1Ws2")
            .productId(2L)
            .protein("protein2")
            .proteinUom("proteinUom2")
            .saturatedFat("saturatedFat2")
            .serving("serving2")
            .servingUom("servingUom2")
            .sodium("sodium2")
            .sodiumUom("sodiumUom2")
            .storageTypeId(2)
            .subCategory1Name("subCategory1Name2")
            .subCategory2Name("subCategory2Name2")
            .sugar("sugar2")
            .sugarUom("sugarUom2")
            .syncItemReferenceId("syncItemReferenceId2")
            .totalFat("totalFat2")
            .transFat("transFat2")
            .uPC("uPC2")
            .vendor("vendor2");
    }

    public static OneWorldSyncProduct getOneWorldSyncProductRandomSampleGenerator() {
        return new OneWorldSyncProduct()
            .id(longCount.incrementAndGet())
            .addedSugars(UUID.randomUUID().toString())
            .addedSugarUom(UUID.randomUUID().toString())
            .allergens(intCount.incrementAndGet())
            .brandName(UUID.randomUUID().toString())
            .calories(UUID.randomUUID().toString())
            .caloriesUom(UUID.randomUUID().toString())
            .carbohydrates(UUID.randomUUID().toString())
            .carbohydratesUom(UUID.randomUUID().toString())
            .categoryName(UUID.randomUUID().toString())
            .cholesterol(UUID.randomUUID().toString())
            .cholesterolUOM(UUID.randomUUID().toString())
            .dataForm(UUID.randomUUID().toString())
            .dietaryFiber(UUID.randomUUID().toString())
            .dietaryFiberUom(UUID.randomUUID().toString())
            .distributor(UUID.randomUUID().toString())
            .gLNNumber(UUID.randomUUID().toString())
            .gTIN(UUID.randomUUID().toString())
            .h7(intCount.incrementAndGet())
            .manufacturerId(intCount.incrementAndGet())
            .manufacturerText1Ws(UUID.randomUUID().toString())
            .productId(longCount.incrementAndGet())
            .protein(UUID.randomUUID().toString())
            .proteinUom(UUID.randomUUID().toString())
            .saturatedFat(UUID.randomUUID().toString())
            .serving(UUID.randomUUID().toString())
            .servingUom(UUID.randomUUID().toString())
            .sodium(UUID.randomUUID().toString())
            .sodiumUom(UUID.randomUUID().toString())
            .storageTypeId(intCount.incrementAndGet())
            .subCategory1Name(UUID.randomUUID().toString())
            .subCategory2Name(UUID.randomUUID().toString())
            .sugar(UUID.randomUUID().toString())
            .sugarUom(UUID.randomUUID().toString())
            .syncItemReferenceId(UUID.randomUUID().toString())
            .totalFat(UUID.randomUUID().toString())
            .transFat(UUID.randomUUID().toString())
            .uPC(UUID.randomUUID().toString())
            .vendor(UUID.randomUUID().toString());
    }
}
