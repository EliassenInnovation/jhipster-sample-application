package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PostTypesAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostTypesAllPropertiesEquals(PostTypes expected, PostTypes actual) {
        assertPostTypesAutoGeneratedPropertiesEquals(expected, actual);
        assertPostTypesAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostTypesAllUpdatablePropertiesEquals(PostTypes expected, PostTypes actual) {
        assertPostTypesUpdatableFieldsEquals(expected, actual);
        assertPostTypesUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostTypesAutoGeneratedPropertiesEquals(PostTypes expected, PostTypes actual) {
        assertThat(expected)
            .as("Verify PostTypes auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostTypesUpdatableFieldsEquals(PostTypes expected, PostTypes actual) {
        assertThat(expected)
            .as("Verify PostTypes relevant properties")
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedOn()).as("check createdOn").isEqualTo(actual.getCreatedOn()))
            .satisfies(e -> assertThat(e.getIsActive()).as("check isActive").isEqualTo(actual.getIsActive()))
            .satisfies(e -> assertThat(e.getLastUpdatedBy()).as("check lastUpdatedBy").isEqualTo(actual.getLastUpdatedBy()))
            .satisfies(e -> assertThat(e.getLastUpdatedOn()).as("check lastUpdatedOn").isEqualTo(actual.getLastUpdatedOn()))
            .satisfies(e -> assertThat(e.getPostType()).as("check postType").isEqualTo(actual.getPostType()))
            .satisfies(e -> assertThat(e.getPostTypeId()).as("check postTypeId").isEqualTo(actual.getPostTypeId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostTypesUpdatableRelationshipsEquals(PostTypes expected, PostTypes actual) {
        // empty method
    }
}
