package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProductGtinAllocationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductGtinAllocationAllPropertiesEquals(ProductGtinAllocation expected, ProductGtinAllocation actual) {
        assertProductGtinAllocationAutoGeneratedPropertiesEquals(expected, actual);
        assertProductGtinAllocationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductGtinAllocationAllUpdatablePropertiesEquals(
        ProductGtinAllocation expected,
        ProductGtinAllocation actual
    ) {
        assertProductGtinAllocationUpdatableFieldsEquals(expected, actual);
        assertProductGtinAllocationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductGtinAllocationAutoGeneratedPropertiesEquals(
        ProductGtinAllocation expected,
        ProductGtinAllocation actual
    ) {
        assertThat(expected)
            .as("Verify ProductGtinAllocation auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductGtinAllocationUpdatableFieldsEquals(ProductGtinAllocation expected, ProductGtinAllocation actual) {
        assertThat(expected)
            .as("Verify ProductGtinAllocation relevant properties")
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedOn()).as("check createdOn").isEqualTo(actual.getCreatedOn()))
            .satisfies(e -> assertThat(e.getgTIN()).as("check gTIN").isEqualTo(actual.getgTIN()))
            .satisfies(e -> assertThat(e.getIsActive()).as("check isActive").isEqualTo(actual.getIsActive()))
            .satisfies(e -> assertThat(e.getProductGtinId()).as("check productGtinId").isEqualTo(actual.getProductGtinId()))
            .satisfies(e -> assertThat(e.getProductId()).as("check productId").isEqualTo(actual.getProductId()))
            .satisfies(e -> assertThat(e.getUpdatedBy()).as("check updatedBy").isEqualTo(actual.getUpdatedBy()))
            .satisfies(e -> assertThat(e.getUpdatedOn()).as("check updatedOn").isEqualTo(actual.getUpdatedOn()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductGtinAllocationUpdatableRelationshipsEquals(
        ProductGtinAllocation expected,
        ProductGtinAllocation actual
    ) {
        // empty method
    }
}
