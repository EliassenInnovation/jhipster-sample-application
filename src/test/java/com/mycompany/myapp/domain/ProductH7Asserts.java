package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProductH7Asserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductH7AllPropertiesEquals(ProductH7 expected, ProductH7 actual) {
        assertProductH7AutoGeneratedPropertiesEquals(expected, actual);
        assertProductH7AllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductH7AllUpdatablePropertiesEquals(ProductH7 expected, ProductH7 actual) {
        assertProductH7UpdatableFieldsEquals(expected, actual);
        assertProductH7UpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductH7AutoGeneratedPropertiesEquals(ProductH7 expected, ProductH7 actual) {
        assertThat(expected)
            .as("Verify ProductH7 auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductH7UpdatableFieldsEquals(ProductH7 expected, ProductH7 actual) {
        assertThat(expected)
            .as("Verify ProductH7 relevant properties")
            .satisfies(e -> assertThat(e.getGtinUpc()).as("check gtinUpc").isEqualTo(actual.getGtinUpc()))
            .satisfies(e -> assertThat(e.geth7KeywordId()).as("check h7KeywordId").isEqualTo(actual.geth7KeywordId()))
            .satisfies(e -> assertThat(e.getiOCGroup()).as("check iOCGroup").isEqualTo(actual.getiOCGroup()))
            .satisfies(e -> assertThat(e.getProductH7Id()).as("check productH7Id").isEqualTo(actual.getProductH7Id()))
            .satisfies(e -> assertThat(e.getProductId()).as("check productId").isEqualTo(actual.getProductId()))
            .satisfies(e -> assertThat(e.getProductName()).as("check productName").isEqualTo(actual.getProductName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductH7UpdatableRelationshipsEquals(ProductH7 expected, ProductH7 actual) {
        // empty method
    }
}
