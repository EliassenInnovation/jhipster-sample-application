package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProductImageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductImageAllPropertiesEquals(ProductImage expected, ProductImage actual) {
        assertProductImageAutoGeneratedPropertiesEquals(expected, actual);
        assertProductImageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductImageAllUpdatablePropertiesEquals(ProductImage expected, ProductImage actual) {
        assertProductImageUpdatableFieldsEquals(expected, actual);
        assertProductImageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductImageAutoGeneratedPropertiesEquals(ProductImage expected, ProductImage actual) {
        assertThat(expected)
            .as("Verify ProductImage auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductImageUpdatableFieldsEquals(ProductImage expected, ProductImage actual) {
        assertThat(expected)
            .as("Verify ProductImage relevant properties")
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedOn()).as("check createdOn").isEqualTo(actual.getCreatedOn()))
            .satisfies(e -> assertThat(e.getImageURL()).as("check imageURL").isEqualTo(actual.getImageURL()))
            .satisfies(e -> assertThat(e.getIsActive()).as("check isActive").isEqualTo(actual.getIsActive()))
            .satisfies(e -> assertThat(e.getProductId()).as("check productId").isEqualTo(actual.getProductId()))
            .satisfies(e -> assertThat(e.getProductImageId()).as("check productImageId").isEqualTo(actual.getProductImageId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductImageUpdatableRelationshipsEquals(ProductImage expected, ProductImage actual) {
        // empty method
    }
}
