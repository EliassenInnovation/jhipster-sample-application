package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StateInfoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStateInfoAllPropertiesEquals(StateInfo expected, StateInfo actual) {
        assertStateInfoAutoGeneratedPropertiesEquals(expected, actual);
        assertStateInfoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStateInfoAllUpdatablePropertiesEquals(StateInfo expected, StateInfo actual) {
        assertStateInfoUpdatableFieldsEquals(expected, actual);
        assertStateInfoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStateInfoAutoGeneratedPropertiesEquals(StateInfo expected, StateInfo actual) {
        assertThat(expected)
            .as("Verify StateInfo auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStateInfoUpdatableFieldsEquals(StateInfo expected, StateInfo actual) {
        assertThat(expected)
            .as("Verify StateInfo relevant properties")
            .satisfies(e -> assertThat(e.getCreatedOn()).as("check createdOn").isEqualTo(actual.getCreatedOn()))
            .satisfies(e -> assertThat(e.getIsActive()).as("check isActive").isEqualTo(actual.getIsActive()))
            .satisfies(e -> assertThat(e.getStateId()).as("check stateId").isEqualTo(actual.getStateId()))
            .satisfies(e -> assertThat(e.getStateName()).as("check stateName").isEqualTo(actual.getStateName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStateInfoUpdatableRelationshipsEquals(StateInfo expected, StateInfo actual) {
        // empty method
    }
}
