package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SupportTicketMstAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupportTicketMstAllPropertiesEquals(SupportTicketMst expected, SupportTicketMst actual) {
        assertSupportTicketMstAutoGeneratedPropertiesEquals(expected, actual);
        assertSupportTicketMstAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupportTicketMstAllUpdatablePropertiesEquals(SupportTicketMst expected, SupportTicketMst actual) {
        assertSupportTicketMstUpdatableFieldsEquals(expected, actual);
        assertSupportTicketMstUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupportTicketMstAutoGeneratedPropertiesEquals(SupportTicketMst expected, SupportTicketMst actual) {
        assertThat(expected)
            .as("Verify SupportTicketMst auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupportTicketMstUpdatableFieldsEquals(SupportTicketMst expected, SupportTicketMst actual) {
        assertThat(expected)
            .as("Verify SupportTicketMst relevant properties")
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedOn()).as("check createdOn").isEqualTo(actual.getCreatedOn()))
            .satisfies(e -> assertThat(e.getEmail()).as("check email").isEqualTo(actual.getEmail()))
            .satisfies(e -> assertThat(e.getIsActive()).as("check isActive").isEqualTo(actual.getIsActive()))
            .satisfies(e -> assertThat(e.getIsWithOutLogin()).as("check isWithOutLogin").isEqualTo(actual.getIsWithOutLogin()))
            .satisfies(e -> assertThat(e.getLastUpdatedBy()).as("check lastUpdatedBy").isEqualTo(actual.getLastUpdatedBy()))
            .satisfies(e -> assertThat(e.getLastUpdatedOn()).as("check lastUpdatedOn").isEqualTo(actual.getLastUpdatedOn()))
            .satisfies(e -> assertThat(e.getPriority()).as("check priority").isEqualTo(actual.getPriority()))
            .satisfies(e -> assertThat(e.getSchoolDistrictId()).as("check schoolDistrictId").isEqualTo(actual.getSchoolDistrictId()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getSubject()).as("check subject").isEqualTo(actual.getSubject()))
            .satisfies(e -> assertThat(e.getSupportCategoryId()).as("check supportCategoryId").isEqualTo(actual.getSupportCategoryId()))
            .satisfies(e -> assertThat(e.getTicketId()).as("check ticketId").isEqualTo(actual.getTicketId()))
            .satisfies(e ->
                assertThat(e.getTicketReferenceNumber()).as("check ticketReferenceNumber").isEqualTo(actual.getTicketReferenceNumber())
            )
            .satisfies(e -> assertThat(e.getUserId()).as("check userId").isEqualTo(actual.getUserId()))
            .satisfies(e -> assertThat(e.getUserName()).as("check userName").isEqualTo(actual.getUserName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupportTicketMstUpdatableRelationshipsEquals(SupportTicketMst expected, SupportTicketMst actual) {
        // empty method
    }
}
