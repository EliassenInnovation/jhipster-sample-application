package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SupportTicketTransactionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupportTicketTransactionAllPropertiesEquals(
        SupportTicketTransaction expected,
        SupportTicketTransaction actual
    ) {
        assertSupportTicketTransactionAutoGeneratedPropertiesEquals(expected, actual);
        assertSupportTicketTransactionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupportTicketTransactionAllUpdatablePropertiesEquals(
        SupportTicketTransaction expected,
        SupportTicketTransaction actual
    ) {
        assertSupportTicketTransactionUpdatableFieldsEquals(expected, actual);
        assertSupportTicketTransactionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupportTicketTransactionAutoGeneratedPropertiesEquals(
        SupportTicketTransaction expected,
        SupportTicketTransaction actual
    ) {
        assertThat(expected)
            .as("Verify SupportTicketTransaction auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupportTicketTransactionUpdatableFieldsEquals(
        SupportTicketTransaction expected,
        SupportTicketTransaction actual
    ) {
        assertThat(expected)
            .as("Verify SupportTicketTransaction relevant properties")
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedOn()).as("check createdOn").isEqualTo(actual.getCreatedOn()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getFileExtension()).as("check fileExtension").isEqualTo(actual.getFileExtension()))
            .satisfies(e -> assertThat(e.getFileName()).as("check fileName").isEqualTo(actual.getFileName()))
            .satisfies(e -> assertThat(e.getFilePath()).as("check filePath").isEqualTo(actual.getFilePath()))
            .satisfies(e -> assertThat(e.getFileSize()).as("check fileSize").isEqualTo(actual.getFileSize()))
            .satisfies(e -> assertThat(e.getIsActive()).as("check isActive").isEqualTo(actual.getIsActive()))
            .satisfies(e -> assertThat(e.getIsSentByFigSupport()).as("check isSentByFigSupport").isEqualTo(actual.getIsSentByFigSupport()))
            .satisfies(e -> assertThat(e.getLastUpdatedBy()).as("check lastUpdatedBy").isEqualTo(actual.getLastUpdatedBy()))
            .satisfies(e -> assertThat(e.getLastUpdatedOn()).as("check lastUpdatedOn").isEqualTo(actual.getLastUpdatedOn()))
            .satisfies(e -> assertThat(e.getTicketId()).as("check ticketId").isEqualTo(actual.getTicketId()))
            .satisfies(e ->
                assertThat(e.getTicketTransactionId()).as("check ticketTransactionId").isEqualTo(actual.getTicketTransactionId())
            )
            .satisfies(e -> assertThat(e.getUserId()).as("check userId").isEqualTo(actual.getUserId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupportTicketTransactionUpdatableRelationshipsEquals(
        SupportTicketTransaction expected,
        SupportTicketTransaction actual
    ) {
        // empty method
    }
}
