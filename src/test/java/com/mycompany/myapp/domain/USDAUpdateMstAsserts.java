package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class USDAUpdateMstAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUSDAUpdateMstAllPropertiesEquals(USDAUpdateMst expected, USDAUpdateMst actual) {
        assertUSDAUpdateMstAutoGeneratedPropertiesEquals(expected, actual);
        assertUSDAUpdateMstAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUSDAUpdateMstAllUpdatablePropertiesEquals(USDAUpdateMst expected, USDAUpdateMst actual) {
        assertUSDAUpdateMstUpdatableFieldsEquals(expected, actual);
        assertUSDAUpdateMstUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUSDAUpdateMstAutoGeneratedPropertiesEquals(USDAUpdateMst expected, USDAUpdateMst actual) {
        assertThat(expected)
            .as("Verify USDAUpdateMst auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUSDAUpdateMstUpdatableFieldsEquals(USDAUpdateMst expected, USDAUpdateMst actual) {
        assertThat(expected)
            .as("Verify USDAUpdateMst relevant properties")
            .satisfies(e ->
                assertThat(e.getAddedSugarsgperServing()).as("check addedSugarsgperServing").isEqualTo(actual.getAddedSugarsgperServing())
            )
            .satisfies(e -> assertThat(e.getAllAllergens()).as("check allAllergens").isEqualTo(actual.getAllAllergens()))
            .satisfies(e -> assertThat(e.getBrandName()).as("check brandName").isEqualTo(actual.getBrandName()))
            .satisfies(e ->
                assertThat(e.getCalciumCamgperServing()).as("check calciumCamgperServing").isEqualTo(actual.getCalciumCamgperServing())
            )
            .satisfies(e ->
                assertThat(e.getCalorieskcalperServing()).as("check calorieskcalperServing").isEqualTo(actual.getCalorieskcalperServing())
            )
            .satisfies(e ->
                assertThat(e.getCholesterolmgperServing())
                    .as("check cholesterolmgperServing")
                    .isEqualTo(actual.getCholesterolmgperServing())
            )
            .satisfies(e -> assertThat(e.getcNCredited()).as("check cNCredited").isEqualTo(actual.getcNCredited()))
            .satisfies(e -> assertThat(e.getcNCrediting()).as("check cNCrediting").isEqualTo(actual.getcNCrediting()))
            .satisfies(e -> assertThat(e.getcNExpirationDate()).as("check cNExpirationDate").isEqualTo(actual.getcNExpirationDate()))
            .satisfies(e -> assertThat(e.getcNLabelDocument()).as("check cNLabelDocument").isEqualTo(actual.getcNLabelDocument()))
            .satisfies(e -> assertThat(e.getcNLabelStatement()).as("check cNLabelStatement").isEqualTo(actual.getcNLabelStatement()))
            .satisfies(e ->
                assertThat(e.getcNProductIdentification())
                    .as("check cNProductIdentification")
                    .isEqualTo(actual.getcNProductIdentification())
            )
            .satisfies(e -> assertThat(e.getcNQualified()).as("check cNQualified").isEqualTo(actual.getcNQualified()))
            .satisfies(e -> assertThat(e.getcNQualifierCode()).as("check cNQualifierCode").isEqualTo(actual.getcNQualifierCode()))
            .satisfies(e ->
                assertThat(e.getDietaryFibergperServing())
                    .as("check dietaryFibergperServing")
                    .isEqualTo(actual.getDietaryFibergperServing())
            )
            .satisfies(e -> assertThat(e.getDownloaded()).as("check downloaded").isEqualTo(actual.getDownloaded()))
            .satisfies(e -> assertThat(e.getEggs()).as("check eggs").isEqualTo(actual.getEggs()))
            .satisfies(e -> assertThat(e.getFish()).as("check fish").isEqualTo(actual.getFish()))
            .satisfies(e -> assertThat(e.getFoodCategory()).as("check foodCategory").isEqualTo(actual.getFoodCategory()))
            .satisfies(e -> assertThat(e.getFunctionalname()).as("check functionalname").isEqualTo(actual.getFunctionalname()))
            .satisfies(e -> assertThat(e.getGtin()).as("check gtin").isEqualTo(actual.getGtin()))
            .satisfies(e -> assertThat(e.getHalal()).as("check halal").isEqualTo(actual.getHalal()))
            .satisfies(e ->
                assertThat(e.getHierarchicalPlacement()).as("check hierarchicalPlacement").isEqualTo(actual.getHierarchicalPlacement())
            )
            .satisfies(e ->
                assertThat(e.getInformationProvider()).as("check informationProvider").isEqualTo(actual.getInformationProvider())
            )
            .satisfies(e -> assertThat(e.getIngredientsenglish()).as("check ingredientsenglish").isEqualTo(actual.getIngredientsenglish()))
            .satisfies(e -> assertThat(e.getIronFemgperServing()).as("check ironFemgperServing").isEqualTo(actual.getIronFemgperServing()))
            .satisfies(e -> assertThat(e.getKosher()).as("check kosher").isEqualTo(actual.getKosher()))
            .satisfies(e -> assertThat(e.getLastupdated()).as("check lastupdated").isEqualTo(actual.getLastupdated()))
            .satisfies(e -> assertThat(e.getLongdescription()).as("check longdescription").isEqualTo(actual.getLongdescription()))
            .satisfies(e -> assertThat(e.getMilk()).as("check milk").isEqualTo(actual.getMilk()))
            .satisfies(e ->
                assertThat(e.getNutrientFormatTypeCodeReferenceCode())
                    .as("check nutrientFormatTypeCodeReferenceCode")
                    .isEqualTo(actual.getNutrientFormatTypeCodeReferenceCode())
            )
            .satisfies(e ->
                assertThat(e.getNutrientQuantityBasisTypeCode())
                    .as("check nutrientQuantityBasisTypeCode")
                    .isEqualTo(actual.getNutrientQuantityBasisTypeCode())
            )
            .satisfies(e ->
                assertThat(e.getNutrientQuantityBasisUnitofMeasure())
                    .as("check nutrientQuantityBasisUnitofMeasure")
                    .isEqualTo(actual.getNutrientQuantityBasisUnitofMeasure())
            )
            .satisfies(e ->
                assertThat(e.getNutrientQuantityBasisValue())
                    .as("check nutrientQuantityBasisValue")
                    .isEqualTo(actual.getNutrientQuantityBasisValue())
            )
            .satisfies(e ->
                assertThat(e.getNutrientsperservingcalculatedfrombymeasurereportedamount())
                    .as("check nutrientsperservingcalculatedfrombymeasurereportedamount")
                    .isEqualTo(actual.getNutrientsperservingcalculatedfrombymeasurereportedamount())
            )
            .satisfies(e -> assertThat(e.getPeanuts()).as("check peanuts").isEqualTo(actual.getPeanuts()))
            .satisfies(e ->
                assertThat(e.getpFSCreditableIngredientTypeCode())
                    .as("check pFSCreditableIngredientTypeCode")
                    .isEqualTo(actual.getpFSCreditableIngredientTypeCode())
            )
            .satisfies(e -> assertThat(e.getpFSDocument()).as("check pFSDocument").isEqualTo(actual.getpFSDocument()))
            .satisfies(e ->
                assertThat(e.getpFSTotalCreditableIngredientAmount())
                    .as("check pFSTotalCreditableIngredientAmount")
                    .isEqualTo(actual.getpFSTotalCreditableIngredientAmount())
            )
            .satisfies(e ->
                assertThat(e.getpFSTotalPortionWeight()).as("check pFSTotalPortionWeight").isEqualTo(actual.getpFSTotalPortionWeight())
            )
            .satisfies(e ->
                assertThat(e.getPotassiumKmgperServing()).as("check potassiumKmgperServing").isEqualTo(actual.getPotassiumKmgperServing())
            )
            .satisfies(e ->
                assertThat(e.getPreparationStateCode()).as("check preparationStateCode").isEqualTo(actual.getPreparationStateCode())
            )
            .satisfies(e ->
                assertThat(e.getProductFormulationStatement())
                    .as("check productFormulationStatement")
                    .isEqualTo(actual.getProductFormulationStatement())
            )
            .satisfies(e -> assertThat(e.getProteingperServing()).as("check proteingperServing").isEqualTo(actual.getProteingperServing()))
            .satisfies(e ->
                assertThat(e.getSaturatedFatgperServing())
                    .as("check saturatedFatgperServing")
                    .isEqualTo(actual.getSaturatedFatgperServing())
            )
            .satisfies(e -> assertThat(e.getServingDescription()).as("check servingDescription").isEqualTo(actual.getServingDescription()))
            .satisfies(e -> assertThat(e.getServingSize()).as("check servingSize").isEqualTo(actual.getServingSize()))
            .satisfies(e ->
                assertThat(e.getServingUnitofMeasure()).as("check servingUnitofMeasure").isEqualTo(actual.getServingUnitofMeasure())
            )
            .satisfies(e -> assertThat(e.getServingsPerCase()).as("check servingsPerCase").isEqualTo(actual.getServingsPerCase()))
            .satisfies(e -> assertThat(e.getSesame()).as("check sesame").isEqualTo(actual.getSesame()))
            .satisfies(e -> assertThat(e.getShellfish()).as("check shellfish").isEqualTo(actual.getShellfish()))
            .satisfies(e -> assertThat(e.getShortdescription()).as("check shortdescription").isEqualTo(actual.getShortdescription()))
            .satisfies(e -> assertThat(e.getSodiummgperServing()).as("check sodiummgperServing").isEqualTo(actual.getSodiummgperServing()))
            .satisfies(e -> assertThat(e.getSoybeans()).as("check soybeans").isEqualTo(actual.getSoybeans()))
            .satisfies(e -> assertThat(e.getSugarsgperServing()).as("check sugarsgperServing").isEqualTo(actual.getSugarsgperServing()))
            .satisfies(e ->
                assertThat(e.getTotalCarbohydrategperServing())
                    .as("check totalCarbohydrategperServing")
                    .isEqualTo(actual.getTotalCarbohydrategperServing())
            )
            .satisfies(e ->
                assertThat(e.getTotalFatgperServing()).as("check totalFatgperServing").isEqualTo(actual.getTotalFatgperServing())
            )
            .satisfies(e -> assertThat(e.getTradeChannels()).as("check tradeChannels").isEqualTo(actual.getTradeChannels()))
            .satisfies(e ->
                assertThat(e.getTransFatgperServing()).as("check transFatgperServing").isEqualTo(actual.getTransFatgperServing())
            )
            .satisfies(e -> assertThat(e.getTreeNuts()).as("check treeNuts").isEqualTo(actual.getTreeNuts()))
            .satisfies(e ->
                assertThat(e.getuSDAFoodsMaterialCode()).as("check uSDAFoodsMaterialCode").isEqualTo(actual.getuSDAFoodsMaterialCode())
            )
            .satisfies(e ->
                assertThat(e.getuSDAFoodsProductsDescription())
                    .as("check uSDAFoodsProductsDescription")
                    .isEqualTo(actual.getuSDAFoodsProductsDescription())
            )
            .satisfies(e -> assertThat(e.getVendorName()).as("check vendorName").isEqualTo(actual.getVendorName()))
            .satisfies(e -> assertThat(e.getVendorID()).as("check vendorID").isEqualTo(actual.getVendorID()))
            .satisfies(e ->
                assertThat(e.getVitaminDmcgperServing()).as("check vitaminDmcgperServing").isEqualTo(actual.getVitaminDmcgperServing())
            )
            .satisfies(e -> assertThat(e.getWheat()).as("check wheat").isEqualTo(actual.getWheat()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUSDAUpdateMstUpdatableRelationshipsEquals(USDAUpdateMst expected, USDAUpdateMst actual) {
        // empty method
    }
}
